{"ast":null,"code":"var _jsxFileName = \"/Users/Bemnet/Documents/BootcampClassWork/Unsolved_Content/22-State/02-Homework/Develop/client/src/components/CategoryMenu/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from \"../../utils/actions\";\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CategoryMenu(props) {\n  _s();\n\n  // const [state, dispatch] = useStoreContext();\n  // const { categories } = state;\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  const dispatch = useDispatch(); // useEffect(() => {\n  //   if (categoryData) {\n  //     dispatch({\n  //       type: UPDATE_CATEGORIES,\n  //       categories: categoryData.categories,\n  //     });\n  //     categoryData.categories.forEach((category) => {\n  //       idbPromise(\"categories\", \"put\", category);\n  //     });\n  //   } else if (!loading) {\n  //     idbPromise(\"categories\", \"get\").then((categories) => {\n  //       dispatch({\n  //         type: UPDATE_CATEGORIES,\n  //         categories: categories,\n  //       });\n  //     });\n  //   }\n  // }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose a Category:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), props.categories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleClick(item._id);\n      },\n      children: item.name\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CategoryMenu, \"tHJTnqHQRuzwb9v8GmzDVPzOY3Q=\", false, function () {\n  return [useQuery, useDispatch];\n});\n\n_c = CategoryMenu;\n\nconst mapStateToProps = state => {\n  let {\n    categories\n  } = state;\n  return {\n    categories: categories\n  };\n};\n\nexport default connect(mapStateToProps)(CategoryMenu); // export default CategoryMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryMenu\");","map":{"version":3,"sources":["/Users/Bemnet/Documents/BootcampClassWork/Unsolved_Content/22-State/02-Homework/Develop/client/src/components/CategoryMenu/index.js"],"names":["React","useEffect","useQuery","useStoreContext","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","connect","useDispatch","CategoryMenu","props","loading","data","categoryData","dispatch","handleClick","id","type","currentCategory","categories","map","item","_id","name","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SACEC,iBADF,EAEEC,uBAFF,QAGO,qBAHP;AAIA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B;AAEA;AAEA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEC;AAAjB,MAAkCZ,QAAQ,CAACI,gBAAD,CAAhD;AACA,QAAMS,QAAQ,GAAGN,WAAW,EAA5B,CAN2B,CAO3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMO,WAAW,GAAIC,EAAD,IAAQ;AAC1BF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEb,uBADC;AAEPc,MAAAA,eAAe,EAAEF;AAFV,KAAD,CAAR;AAID,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,KAAK,CAACS,UAAN,CAAiBC,GAAjB,CAAsBC,IAAD,iBACpB;AAEE,MAAA,OAAO,EAAE,MAAM;AACbN,QAAAA,WAAW,CAACM,IAAI,CAACC,GAAN,CAAX;AACD,OAJH;AAAA,gBAMGD,IAAI,CAACE;AANR,OACOF,IAAI,CAACC,GADZ;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAhDQb,Y;UAKiCR,Q,EACvBO,W;;;KANVC,Y;;AAiDT,MAAMe,eAAe,GAAIC,KAAD,IAAW;AACjC,MAAI;AAAEN,IAAAA;AAAF,MAAiBM,KAArB;AACA,SAAO;AACLN,IAAAA,UAAU,EAAEA;AADP,GAAP;AAGD,CALD;;AAOA,eAAeZ,OAAO,CAACiB,eAAD,CAAP,CAAyBf,YAAzB,CAAf,C,CACA","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from \"../../utils/actions\";\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { connect, useDispatch } from \"react-redux\";\n\nfunction CategoryMenu(props) {\n  // const [state, dispatch] = useStoreContext();\n\n  // const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n  const dispatch = useDispatch();\n  // useEffect(() => {\n  //   if (categoryData) {\n  //     dispatch({\n  //       type: UPDATE_CATEGORIES,\n  //       categories: categoryData.categories,\n  //     });\n  //     categoryData.categories.forEach((category) => {\n  //       idbPromise(\"categories\", \"put\", category);\n  //     });\n  //   } else if (!loading) {\n  //     idbPromise(\"categories\", \"get\").then((categories) => {\n  //       dispatch({\n  //         type: UPDATE_CATEGORIES,\n  //         categories: categories,\n  //       });\n  //     });\n  //   }\n  // }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {props.categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  let { categories } = state;\n  return {\n    categories: categories,\n  };\n};\n\nexport default connect(mapStateToProps)(CategoryMenu);\n// export default CategoryMenu;\n"]},"metadata":{},"sourceType":"module"}