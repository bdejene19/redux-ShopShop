{"ast":null,"code":"var _jsxFileName = \"/Users/Bemnet/Documents/BootcampClassWork/Unsolved_Content/22-State/02-Homework/Develop/client/src/pages/Detail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport Cart from \"../components/Cart\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY, ADD_TO_CART, UPDATE_PRODUCTS } from \"../utils/actions\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from \"../assets/spinner.gif\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Detail(props) {\n  _s();\n\n  // const [state, dispatch] = useStoreContext();\n  // const { products, cart } = state;\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const [currentProduct, setCurrentProduct] = useState({});\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_PRODUCTS);\n  useEffect(() => {\n    // already in global store\n    if (props.products.length) {\n      setCurrentProduct(props.products.find(product => product._id === id));\n    } // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n      data.products.forEach(product => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    } // get cache from idb\n    else if (!loading) {\n      idbPromise(\"products\", \"get\").then(indexedProducts => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    var _props$cart;\n\n    const itemInCart = (_props$cart = props.cart) === null || _props$cart === void 0 ? void 0 : _props$cart.find(cartItem => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise(\"cart\", \"put\", { ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct,\n          purchaseQuantity: 1\n        }\n      });\n      idbPromise(\"cart\", \"put\", { ...currentProduct,\n        purchaseQuantity: 1\n      });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n    idbPromise(\"cart\", \"delete\", { ...currentProduct\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [currentProduct && props.cart ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-1\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"\\u2190 Back to Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentProduct.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentProduct.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), \"$\", currentProduct.price, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addToCart,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !props.cart.find(p => p._id === currentProduct._id),\n          onClick: removeFromCart,\n          children: \"Remove from Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/images/${currentProduct.image}`,\n        alt: currentProduct.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : null, loading ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: spinner,\n      alt: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Detail, \"5588Wka17RRf1YOOSPN+B+WGQLk=\", false, function () {\n  return [useDispatch, useParams, useQuery];\n});\n\n_c = Detail;\n\nconst mapStateToProps = state => {\n  let {\n    cart,\n    products\n  } = state;\n  return {\n    cart: cart,\n    products: products\n  };\n};\n\nexport default connect(mapStateToProps)(Detail); // export default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/Users/Bemnet/Documents/BootcampClassWork/Unsolved_Content/22-State/02-Homework/Develop/client/src/pages/Detail.js"],"names":["React","useEffect","useState","Link","useParams","useQuery","Cart","useStoreContext","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","ADD_TO_CART","UPDATE_PRODUCTS","QUERY_PRODUCTS","idbPromise","spinner","connect","useDispatch","Detail","props","dispatch","id","currentProduct","setCurrentProduct","loading","data","products","length","find","product","_id","type","forEach","then","indexedProducts","addToCart","itemInCart","cart","cartItem","purchaseQuantity","parseInt","removeFromCart","name","description","price","p","image","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\n\nimport Cart from \"../components/Cart\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from \"../utils/actions\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from \"../assets/spinner.gif\";\nimport { connect, useDispatch } from \"react-redux\";\n\nfunction Detail(props) {\n  // const [state, dispatch] = useStoreContext();\n  // const { products, cart } = state;\n\n  const dispatch = useDispatch();\n\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    // already in global store\n    if (props.products.length) {\n      setCurrentProduct(props.products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise(\"products\", \"get\").then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = props.cart?.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise(\"cart\", \"put\", { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise(\"cart\", \"delete\", { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && props.cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{\" \"}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!props.cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  let { cart, products } = state;\n  return {\n    cart: cart,\n    products: products,\n  };\n};\nexport default connect(mapStateToProps)(Detail);\n// export default Detail;\n"]},"metadata":{},"sourceType":"module"}